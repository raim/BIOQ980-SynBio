---
### Linear and Non-linear Regression: analyzing a single data set

```{r, fig.width=10, fig.height=4.5}

## GET A SINGLE DATASET
od <- getData(raw,"OD") # what is `od` ?
TIME <- raw$Time        # what does the $ do?
Xt <- od[,"A8"]
plot(TIME, Xt)
```

---
```{r, fig.width=10, fig.height=4.5}
## cut to growth range
rng <- TIME<1500   # what is `rng` ?
Xt <- Xt[rng]
TIME <- TIME[rng]

## look at data
par(mfcol=c(1,2), mai=c(.75,.75,.1,.1), mgp=c(1.5,.5,0), cex=1.2)
plot(TIME, Xt)
plot(TIME, log(Xt)) # log it - default `log` in R is the natural logarithm, ln
```

---
```{r, fig.width=10, fig.height=4.5}
## cut to linear range of growth
rng <- TIME>600 & TIME < 900
xt <- Xt[rng]
time <- TIME[rng]

## look again at data
par(mfcol=c(1,2))
plot(time, xt)
plot(time, log(xt))
```

---.codefont

```{r}
## DO LINEAR REGRESSION
## ln(X(t)) = mu * t + ln(X(0))
lfit <- lm(log(xt) ~ time) # what is `~` ?

## check quality of fit
summary(lfit)
```

---
```{r, fig.width=5, fig.height=4.5}
## get parameters from linear regression
x0.1 <- exp(coefficients(lfit)[1]) # e^ln(X(0)) = ?
mu.1 <- coefficients(lfit)[2] # mu

## plot
par(mai=c(.75,.75,.1,.1),mgp=c(1.5,.5,0),cex=1.2)
plot(TIME,log(Xt))
lines(TIME, mu.1*TIME + log(x0.1), col="red")

```

---.codefont
```{r}
## DO NON-LINEAR REGRESSION, using
## the results of the linear fit as initial parameter guesses
dat <- data.frame(time=time, xt=xt)
start <- list(mu=mu.1,x0=x0.1)
nlfit <- nls(xt ~ x0*exp(mu*time),data=dat,start=start) # TRY MORE COMPLEX MODELS, see a few slides ahead

## check quality of fit
summary(nlfit)
```

---.codefont
```{r, fig.width=10, fig.height=4}
## get parameters & plot results
mu.2 <- coefficients(nlfit)[1]
x0.2 <- coefficients(nlfit)[2]
par(mfcol=c(1,2),mai=c(.75,.75,.1,.1),mgp=c(1.5,.5,0),cex=1.2)
plot(TIME,Xt,ylim=c(0.2,.4))
lines(TIME, x0.2 * exp(TIME*mu.2),col="green", lty=2,lwd=5)
lines(TIME, x0.1 * exp(TIME*mu.1),col="red",lwd=2)
legend("bottomright",legend=c("data","lin.reg.","non-lin."),
       col=c(1,2,3),pch=c(1,NA,NA),lty=c(NA,1,2),lwd=3)
plot(TIME, x0.2 * exp(TIME*mu.2),col="green", lty=2,lwd=5)
points(TIME,Xt)
lines(TIME, x0.1 * exp(TIME*mu.1),col="red",lwd=2)
```

<oq>How many linear phases can you detect in your experiments? Why are there several?</oq>

---&twocol

### Fitting Growth Models

***=left
<img src="assets/img/Ecoli_20161014_OD_grofit_A8.png" height="300">

* Initial Cell Density: \(X(0) \)
* Lag Phase: \(\lambda \)
* Exponential Phase: growth rate \(\mu \)
* Stationary Phase: *capacity* \(A \) 

https://cran.r-project.org/package=grofit

***=right

* Logistic Equation:<br/>
\(X(t) = \frac{A}{1+e^{\frac{4 \mu}{A}(\lambda - t)+2}} \)
* Gompertz:<br/>
\(X(t) = A e^{-e^{\frac{\mu e}{A}(\lambda -t)+1}} \)
* Modified Gompertz:<br/>
\(X(t) = A e^{-e^{\frac{\mu e}{A}(\lambda -t)+1}} + A e^{\alpha(t-t_{shift})} \)
* Richard's generalized logistic model:<br/> \(  X(t) = A (1 + \nu e^{1+ \nu + \frac{\mu}{A}(1+\nu )^{1+\frac{1}{\nu}}(\lambda -t)})^{-\frac{1}{\nu}} \)

as implemented in R package `grofit`

<oq> Try these equations with `nls`.<oq/><br/>
<oq> Do we need packages if `nls` works well?<oq/>

---
### Prepare Data: blanks, cuts, etc.

```{r, eval=TRUE}
raw2 <- cutData(raw, rng=c(0,1550), mid="Time")
raw3 <- correctBlanks(raw2, plate,dids="OD",max.mid=1500) 
raw4 <- correctBlanks(raw3,plate,dids="mVenus",by=c("strain","IPTG"),
                      mbins=length(raw$Time)/5,verb=FALSE)
data <- adjustBase(raw4, base=0, add.fraction=.001, 
                   wells=unlist(groups),xlim=c(1,which(raw$Time>1500)[1]),
				   each=TRUE, verb=FALSE) # set verb to TRUE
```
<oq> What happens in `correctBlanks` and `cutData`? <br/>
What does `adjustBase` do, and when could we need it?<p/>

---
### Get Replicate Groups

```{r, fig.width=12, fig.height=4}
groups <- getGroups(plate, c("strain"), verb=FALSE) # SET TO TRUE!
groups2 <- getGroups(plate, c("strain","IPTG"), verb=FALSE) 
viewGroups(data, groups=groups, groups2=groups2, verb=FALSE)
```

<oq> What are the lines and areas?<br/>
What is the structure of the `groups` item? 
Can you make your own groupings?<br/>
Try different groupings and parameters to `viewGroups`.</oq>

---
### Use Package `grofit` to Fit Growth Data

```{r, eval=TRUE}
raw2 <- cutData(raw,rng=c(200,1500))
grodat <- data2grofit(raw2, did="OD", plate=plate, 
                      wells=groups[["pUC18mV"]])
library(grofit)
fitparams <- grofit.2.control(interactive=FALSE, plot=TRUE) # SET ALL TO TRUE!!
pdf("growthrates.pdf")
fits <- gcFit.2(time=grodat$time, data=grodat$data, control=fitparams)
dev.off()
```

---
### Use Package `grofit` to Fit Growth Data

```{r, fig.width=7, fig.height=5}
table <- grofitGetParameters(fits, p=c("AddId","mu.spline"))
boxplot(table[,"mu.spline"] ~ table[,"AddId"], las=2, ylim=c(1.9e-4,5e-4))
```

<oq> 
Try different well groups instead of `table[,"AddId"]`.<br/>
Are the fits Ok? How to get more information on the fits?</oq>

---&twocol

***=left
### Gene Expression

* Measured: total fluorescence per well
* Wanted: protein level per cell!

Assumptions:

1. Fluorescence is linear with protein level
2. OD is linear with cell number

<oq>\( \Rightarrow \) Fluor./OD  &Tilde; proteins/cell</oq>

***=right
<img src="assets/img/ecoli_20141014.png" height="190">
<img src="assets/img/Ecoli_20161014_OD_grofit_A8.png" height="190">
<img src="assets/img/Ecoli_20161014_OD_growthrates.png" height="190">



---
### Gene Expression: Normalized Fluorescence - FL/OD

```{r, fig.width=12, fig.height=5}
viewGroups(data, groups=groups, groups2=groups2, xid="OD", lwd.orig=.5, verb=FALSE)
```

---
### Gene Expression: Normalized Fluorescence  - FL/OD

```{r, fig.width=12, fig.height=5}
fl <- getData(data,"mVenus")
od <- getData(data,"OD")
data <- addData(data, ID="mV/OD", dat=fl/od, col="#0095FF")
viewGroups(data, groups=groups, groups2=groups2, 
           dids=c("OD","mV/OD"),ylims=list("mV/OD"=c(0,1e4)),emphasize.mean=T,verb=F)
```

---
### Gene Expression: Normalized Fluorescence - FL/OD

```{r, fig.width=12, fig.height=5}
viewGroups(data, groups=groups, groups2=groups2, dids="mV/OD", xid="OD", lwd.orig=.5, 
           ylim=c(0,1e4), g2.legend=FALSE, verb=FALSE)
```

<oq>What could the slope \(\frac{mV}{OD} \sim OD \) (where it's linear) 
mean?<br/>Can we use it?</oq>

---
### Gene Expression: Normalized Fluorescence - Interpolate to OD

```{r, fig.width=12, fig.height=5}
od.data <- interpolatePlateData(data,"OD")
viewGroups(od.data, groups=groups[2], groups2=groups2,xlim=c(.01,.15),
           ylims=list("mV/OD"=c(0,1e4)),dids="mV/OD", show.ci=F,lwd.orig=0, verb=F)
```

<oq>Can we smooth upstream data to get rid of the noise?</oq>

---
### Gene Expression: The Fold Change

```{r, fig.width=12, fig.height=5, echo=1:3}
flod <- getData(od.data,"mV/OD")
uninduced <- rowMeans(flod[, groups2[["pUC18mV_Inj:NA"]]],na.rm=TRUE)
od.data <- addData(od.data, ID="mV/OD/uninduced", dat=flod/uninduced, col="#AAAA00")
viewGroups(od.data, groups=groups[2], groups2=groups2,xlim=c(.01,.15),dids=c("mV/OD/uninduced"),show.ci=F,lwd.orig=0, verb=F, ylim=c(0,15))
```

---
### Gene Expression: Data Normalization

```{r, fig.width=11, fig.height=3.3, echo=FALSE, results="hide"}
par(mfcol=c(1,2),mai=c(.8,.75,.1,.1))
viewGroups(data, groups=groups[2], groups2=groups2, ylims=list("mV/OD"=c(0,1e4)),embed=TRUE,no.par=TRUE,g2.legend=FALSE,yaxis=2:3)
viewGroups(od.data, groups=groups[2], groups2=groups2,xlim=c(.01,.15),
           ylims=list("mV/OD"=c(0,7e3)),dids="mV/OD", show.ci=F,lwd.orig=0, verb=F,embed=TRUE,no.par=TRUE,g2.legend=FALSE)
```
```{r, fig.width=11, fig.height=3.3, echo=FALSE, results="hide"}
flod <- getData(data,"mV/OD")
uninduced <- rowMeans(flod[, groups2[["pUC18mV_Inj:NA"]]],na.rm=TRUE)
data <- addData(data, ID="mV/OD/uninduced", dat=flod/uninduced, col="#AA0000")
par(mfcol=c(1,2),mai=c(.8,.75,.1,.1))
viewGroups(data, groups=groups[2], groups2=groups2,dids=c("OD","mV/OD/uninduced"),show.ci=T,lwd.orig=0, verb=F, ylims=list("mV/OD/uninduced"=c(0,12)),embed=TRUE,no.par=TRUE,g2.legend=FALSE)
viewGroups(od.data, groups=groups[2], groups2=groups2,xlim=c(.01,.15),dids=c("mV/OD/uninduced"),show.ci=F,lwd.orig=0, verb=F, ylim=c(0,15),embed=TRUE,no.par=TRUE,g2.legend=FALSE)
```

<oq>What's wrong with `mV/OD/uninduced` vs. `time` w/o interpolation?</oq>


---
### Gene Expression: Data Normalization - Result

```{r, fig.width=12, fig.height=4}
results <- boxData(od.data, did="mV/OD/uninduced", rng=.08, groups=groups2, type="bar")
```

Extracts values in given range; plots by groups, and returns
values for each well. 

<oq>What are the error bars?<br/>
See `?cutData` on how to obtain values in 
a given range directly.<br/>Or try yourself with base R.</oq>

---
### Gene Expression: Data Normalization - Result

```{r, fig.width=12, fig.height=5}
library(platexpress)
head(results)
```
<oq>Calculate confidence intervals and error bars yourself.</oq>

---.codefont

```{r, fig.width=8, fig.height=5}
imgtxt <- matrix(results[,1], nrow=7, ncol=12) # MATRIX THAT LOOKS LIKE PLATE
imgdat <- matrix(results[,3], nrow=7, ncol=12)
tmp <- t(apply(imgdat, 2, rev)) # WHAT HAPPENS HERE?
par(mai=c(.5,.5,.01,.01))
image(x=1:12, y=1:7, z=log(tmp), axes=FALSE, ylab=NA, xlab=NA)
text(x=rep(1:12,7), y=rep(7:1,each=12), paste(t(imgtxt),":\n",t(round(imgdat,2)))) 
axis(1,at=1:12); axis(2, at=1:7, labels=toupper(letters[7:1]), las=2)
```

<oq>In which order does `image` plot rows and columns of a matrix?</oq><br/> 
<oq>Can you spot any systematic plate effects?</oq>

<br/><br/>hide:
pixels in the first row, from left to right,<br/> 
correspond to the first column in the matrix, bottom up

---
### Gene Expression - Summary

1. Growth rate \( \mu \) matters!
1. Fluorescence per OD as a measure of proteins per cell.
    * Note noise accumulation at low values. <oq>Why?</oq>
3. Interpolate data to a common OD.
4. Calculate fold-ratio to control.
    * Be careful; what is your control?
4. Get data at a given OD, or search maximum, etc.

<br/>
<oq>What other measures would be interesting or<br/>could be
required for a quantitative model?</oq>

---.centertext
## From Wells to Cells

### Conversion of Carbon&Energy Source S to biomass X:

S \(\rightarrow\) y X + (1-y) P

<oq>What are substrate S and product P in our experiments?</oq>

### Catalyzed by X:

$$latex
\begin{equation}
  \label{apeq:monod}
  \begin{aligned}
    \frac{\text{d}X}{\text{d}t} &= \mu X\\
    \frac{\text{d}S}{\text{d}t} &= - \frac{1}{y} \mu X \\
    \mu & =\mu_{max}\frac{S}{S+K}
    %\mu &= f(S)
  \end{aligned}
\end{equation}
$$

<oq>How can we estimate the yield \(y\) ?</oq> <oq>Does \(y\) have units? Which?</oq><br/>
<oq>What is the steady state of the system?</oq>


--- .centertext
## From Wells to Cells

### Continuous Culture - Dilution Rate \(\; \phi\)

$$latex
\begin{equation}
  \label{apeq:monod2}
  \begin{aligned}
    \frac{\text{d}X}{\text{d}t} &= (\mu-\phi) X\\
    \frac{\text{d}S}{\text{d}t} &= (S_{in}-S)\phi - \frac{1}{y} \mu X \\
    \mu & =\mu_{max}\frac{S}{S+K}
    %\mu &= f(S)
  \end{aligned}
\end{equation}
$$


<oq>What is the steady state of above system?<br/>
What is the feedback structure of growth?<br/>
Can above system show more complex dynamics, such as<br/>
oscillations or multistablity?</oq>


---.codefont
## From Wells to Cells: Growth

### Fluorescent Protein F, total culture concentration:
$$latex
\begin{equation}
  \label{eq:Protein}
  \begin{aligned}
%  \frac{\text{d} F}{\text{d} t} = k X V_c - d F
    \frac{\text{d}X}{\text{d}t} &= \mu X\\
  \frac{\text{d} F}{\text{d} t} &= K(?) - \delta F
  \end{aligned}
\end{equation}
$$

### Intracellular concentration:

$$latex
\begin{equation}
f = \frac{F}{X V_c}
\end{equation}
$$

<br/> <oq>What is \(K\), must be \(\sim X\), right ?</br>How can we
map \(F\) from total culture to intracellular concentration \(f\)
?<br/> Calculate \(\frac{\text{d} f}{\text{d} t}\).</oq>

---.codefont 
## From Wells to Cells : Growth

$$latex
\begin{equation}
  \begin{aligned}
    f =& \frac{F}{X V_c} \;;\; v_f=X V_c\\
    \dot{f} =& \dot{F}\frac{1}{X V_c} - \dot{X}\frac{F}{X}\frac{1}{X V_c}\\
            =& \dot{F}\frac{1}{v_f} - \dot{X}\frac{F}{X}\frac{1}{v_f}\\
            =& (K - \delta f\,v_f)\frac{1}{v_f} - \mu X \frac{f v_f}{X} \frac{1}{v_f}\\
            =& \frac{K}{v_f} - (\delta + \mu)f\\
          K =& k X V_c
  \end{aligned}
\end{equation}
$$

<oq>What is \(X V_c\) ?</oq><br/>
<oq>Note the term \(\delta + \mu\) . What is it, and where did the \(\mu\) come from?</oq>

---.codefont
## From Wells to Cells : Growth

$$latex
\begin{equation}
  \label{apeq:wellmodel}
  \begin{aligned}
    \frac{\text{d}X}{\text{d}t} &= \mu X\\
    \frac{\text{d}S}{\text{d}t} &= - \frac{1}{y} \mu X\\
    \frac{\text{d}f}{\text{d}t} &= k - (\delta+\mu)f
  \end{aligned}
\end{equation}
$$

<br/>
 
* <oq>Add activation of $f$ production by an inducer and
modulation by a riboswitch $r$.</oq>
* <oq>Add expression of both from a plasmid
(which itself increases exponentially within cells).</oq> 
* <oq>And how could we account for
the effect of induced gene expression on growth rate?</oq>

<oq>. . . and find appropriate parameters (back in data hell),<br/> 
start e.g. at `bionumbers`.</oq>

---

Parameter|Unit|Value|Description|Source
---|---|---|---|---
\(y\) | g DCW / g glucose | 0.5 | yield factor \(\ \frac{\Delta X}{- \Delta S} \)| [bionumbers](http://bionumbers.hms.harvard.edu/bionumber.aspx?&id=105318&ver=3) 
\(V_c\)| &mu;m<sup>3</sup> | 1 | average cell volume | [bionumbers](http://bionumbers.hms.harvard.edu/bionumber.aspx?id=101788)
\(C_c\)| fg/&mu;m<sup>3</sup> | 242&#8723;43 | cell carbon content | [bionumbers](http://bionumbers.hms.harvard.edu/bionumber.aspx?&id=106619)
DCW/OD | (g/L)/OD | 0.36 | g DCW per OD600  | [bionumbers](http://bionumbers.hms.harvard.edu/bionumber.aspx?&id=109837)
cells/OD| (cells/mL)/OD| 5.9-21 1e8 | cells per OD600 | [bionumbers]()
\(\mu_{max}\)| 1/h | | maximal growth rate | estimate from exponential phase
\(K\) | mol/L | | \(S\) where \(\mu = \mu_{max}/2 \) | estimate from data
\(k\) | mol/(L*h)| | protein expression rate| search literature/databases
\(\delta\) | 1/h | | protein degradation rate | search literature/databases

---.codefont
## From Wells to Cells : Riboswitch

$$latex \scriptsize
\begin{equation}
  \label{apeq:riboswitch}
  \begin{aligned}
    \frac{\text{d}sRNA}{\text{d}t} &= C P_{s} (TetR, aTc) - (\mu + \delta_s)sRNA\\
    \frac{\text{d}mRNA}{\text{d}t} &= C P_{m} ( LacI,IPTG) - (\mu + \delta_m)mRNA\\
    \frac{\text{d}GFP}{\text{d}t} &= (r_0 mRNA + r_1 sRNA::mRNA)\frac{m}{m+\mu+\delta_g} - (\mu + \delta_g)GFP
  \end{aligned}
\end{equation}
$$

with transcriptional activities:

$$latex \tiny
\begin{equation}
  \label{apeq:transcription}
  \begin{aligned}
  P_m(LacI, IPTG) &= P_m^0 \frac{1+\frac{1}{f_{lac}}(\frac{LacI}{K_{lac}(1+\frac{IPTG}{K_{IPTG}})})^{n_{lac}}}{1+(\frac{LacI}{K_{lac}(1+\frac{IPTG}{K_{IPTG}})})^{n_{lac}}}\\
  P_s(TetR,aTc) &= P_s^0 \frac{1+\frac{1}{f_{tet}}(\frac{TetR}{K_{tet}(1+\frac{aTc}{K_{aTc}})})^{n_{tet}}}{1+(\frac{TetR}{K_{tet}(1+\frac{aTc}{K_{aTc}})})^{n_{tet}}}\\
  \end{aligned}
\end{equation}
$$

<oq>What and where is sRNA::mRNA?</oq><br/>
<oq>What are all the parameters?</oq> <oq>Can you derive equations for the steady state?</oq>

---
## From Wells to Cells : Riboswitch


Rodrigo *et al.* 2012 - Steady State Solution:

$$latex \scriptsize
\begin{equation}
  \label{apeq:steadystate}
  GFP_{ss}(IPTG, aTc) = F_0 \frac{1 + f_1(\frac{IPTG}{K_1})^{n_{1}} + f_2(\frac{aTc}{K_2})^{n_{2}} + f_1 f_{sRNA}(\frac{IPTG}{K_1})^{n_{1}}(\frac{aTc}{K_2})^{n_{2}} }{1 + (\frac{IPTG}{K_1})^{n_{1}} + (\frac{aTc}{K_2})^{n_{2}} + (\frac{IPTG}{K_1})^{n_{1}}(\frac{aTc}{K_2})^{n_{2}}}
\end{equation}
$$

<br/>

<oq>What are these parameters>? See Supplement of Rodrigo <em>et al.</em> 
2012</oq>

<oq>Plot this function in `R` or `python`, using the<br/> concentration ranges 
in your experiments: can you use `image`? Can `R` do 3D plots?</oq>


<oq>Is the steady state assumption justified? Can we combine it with our cell growth model?</oq>


---
### Model

```{r , fig.width=12, fig.height=4}
## Chaos in the atmosphere
growth <- function(t, state, parameters) {
    with(as.list(c(state, parameters)), {
        #y  <- a*S + b # variable yield, Heinzle et al. 1983
        mu <- mu_max*S/(S+K) 
        dX <-  mu*X
        dS <-  - mu*X/y
        dp <- (mu.p - mu) * p
        df <- p*k - (d+mu)*f
        list(c(dX, dS, dp, df))
    })
}
```

---

### Solve
```{r , fig.width=12, fig.height=4}
library(deSolve)

parameters <- c(mu_max = 1, K = 1, mu.p = 1, k = .1, d=.1, y=0.5)#, a=1, b=-1)
state      <- c(X = 0.001, S = 10, p = 1, f = 0)
times      <- seq(0, 20, by = 0.01)

out <- ode(y = state, times = times, func = growth, parms = parameters)

par(mai=c(.75,.75,.1,.1))
plot(out)
```


---
### Vary Parameters & Initial Conditions
```{r, fig.width=6, fig.height=4}
ode.scan <- function(id, val) {
    outs <- rep(list(NA),length(val))
    for ( i in 1:length(val) ) {
        if ( id %in% names(parameters) )
            parameters[id] <- val[i]
        if ( id %in% names(state) )
            state[id] <- val[i]
        outs[[i]] <- ode(y = state, times = times, func = growth,
                         parms = parameters)
    }
    outs
}
```

---.codefont
### Vary Parameters & Initial Conditions
```{r, fig.width=12, fig.height=4}
par(mfcol=c(1,2),mai=c(.75,.75,.1,.1),mgp=c(1.7,.5,0))
outs <- ode.scan("K",seq(0.1,10,1))
X <- matrix(unlist(lapply(outs, function(x) x[,"X"])), ncol = length(times), byrow = TRUE)
matplot(times,t(X),type="l",col=1:nrow(X),lty=1:nrow(X))
legend("topleft",paste("K",seq(0.1,10,1)),col=1:nrow(X),lty=1:nrow(X))

outs <- ode.scan("S",seq(0.1,10,1))
X <- matrix(unlist(lapply(outs, function(x) x[,"X"])), ncol = length(times), byrow = TRUE)
matplot(times,t(X),type="l",col=1:nrow(X),lty=1:nrow(X))
legend("topleft",paste("S",seq(0.1,10,1)),col=1:nrow(X),lty=1:nrow(X))
```

---
### Fit To Data

https://www.r-bloggers.com/learning-r-parameter-fitting-for-models-involving-differential-equations/
```{r}
library(FME)
```
